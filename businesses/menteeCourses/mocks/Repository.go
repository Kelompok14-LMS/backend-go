// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mentee_courses "github.com/Kelompok14-LMS/backend-go/businesses/menteeCourses"
	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// CheckEnrollment provides a mock function with given fields: menteeId, courseId
func (_m *Repository) CheckEnrollment(menteeId string, courseId string) (*mentee_courses.Domain, error) {
	ret := _m.Called(menteeId, courseId)

	var r0 *mentee_courses.Domain
	if rf, ok := ret.Get(0).(func(string, string) *mentee_courses.Domain); ok {
		r0 = rf(menteeId, courseId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*mentee_courses.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(menteeId, courseId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Enroll provides a mock function with given fields: menteeCourseDomain
func (_m *Repository) Enroll(menteeCourseDomain *mentee_courses.Domain) error {
	ret := _m.Called(menteeCourseDomain)

	var r0 error
	if rf, ok := ret.Get(0).(func(*mentee_courses.Domain) error); ok {
		r0 = rf(menteeCourseDomain)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepository creates a new instance of Repository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepository(t mockConstructorTestingTNewRepository) *Repository {
	mock := &Repository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
